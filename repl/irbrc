#  -*- mode: ruby -*-
# irb(1)

at_exit { puts }

def require_safe(library)
  begin
    require library
    yield  if block_given?
  rescue LoadError => err
    puts "Skipping '#{library}': #{err}"
  end
end

require 'rubygems'

require_safe 'pp'
require_safe 'ap'
require_safe 'dp'

require_safe 'interactive_editor'
require_safe 'irb_rocket'
require_safe 'bond' do
  Bond.start
end

# http://ozmm.org/posts/time_in_irb.html
def time(times = 1)
  require 'benchmark'
  ret = nil
  Benchmark.bm { |x| x.report { times.times { ret = yield } } }
  ret
end

class Object
  def local_methods(obj = self)
    (obj.methods - (obj.class.superclass || Object).instance_methods).sort
  end
end

module ObjectSpace
  def each_instance_of(klass)
    each_object do |obj|
      yield(obj) if obj.instance_of? klass
    end
  end

  def each_kind_of(klass)
    each_object do |obj|
      yield(obj) if obj.kind_of? klass
    end
  end
end

if defined? IRB
  IRB.conf[:AUTO_INDENT] = true
  IRB.conf[:PROMPT_MODE] = :SIMPLE  if IRB.conf[:PROMPT_MODE] == :DEFAULT

  def IRB.reload
    load __FILE__
  end
end
