#  -*- mode: ruby -*-

at_exit { puts }

def require_safe(string)
  begin
    require string
  rescue LoadError
    return nil
  end
  yield  if block_given?
end

require_safe 'rubygems'
require_safe 'pp'
require_safe 'ap'
require_safe 'dp'

require_safe 'irb/completion'
require_safe 'irb/ext/save-history'

IRB.conf[:AUTO_INDENT] = true
IRB.conf[:HISTORY_FILE] = "#{ENV['HOME']}/.irb_history"
IRB.conf[:SAVE_HISTORY] = 5000

IRB.conf[:PROMPT][:SNAZZY] = {
  :PROMPT_I => ">> ",
  :PROMPT_C => "*> ",
  :PROMPT_N => "%i> ",
  :PROMPT_S => "%l> ",
  :RETURN   => "==> %s\n"
}
IRB.conf[:PROMPT_MODE] = :SNAZZY  if IRB.conf[:PROMPT_MODE] == :DEFAULT

require_safe 'interactive_editor'
require_safe 'irb_rocket'
class Object
  def local_methods(obj = self)
    (obj.methods - (obj.class.superclass || Object).instance_methods).sort
  end
end

module ObjectSpace
  def each_instance_of(klass)
    each_object do |obj|
      yield(obj) if obj.instance_of? klass
    end
  end

  def each_kind_of(klass)
    each_object do |obj|
      yield(obj) if obj.kind_of? klass
    end
  end
end
