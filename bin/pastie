#!/usr/bin/env ruby -wKU

require "net/http"
require "uri"
require "optparse"

pattern = /\$\('paste_authorization'\)\.value='([^']+)';/

# url = 'http://pastie.textmate.org/pastes/%s'
url = 'http://pastie.org/pastes/%s'

# Available parsers (as of 2007-10-14):
all_parsers = [:diff, :html, :javascript, :nitro_xhtml, :pascal, :plaintext, :rhtml, :ruby, :sql]

parser = :plaintext
priv = 0
wrap = 0
author = "#{`dscl . read "/Users/$USER" realname|cut -f2 -d:`.strip} (#{ENV['USER']})"

opts = OptionParser.new do |opts|
  opts.banner = "Usage: pastie [OPTIONS] [PASTES]"
  opts.on("-p", "--parser PARSER", all_parsers,
          "Specify the syntax for the pasted text") do |p|
    parser = p
  end
  opts.on("-P", "--private", "Create a private paste") do
    priv = 1
  end
  opts.on("-w", "--wrap", "Soft wrap the pasted text") do
    wrap = 1
  end
  opts.on_tail("--show-parsers", "Show which parsers are available") do
    puts "Available parsers:"
    puts "  #{all_parsers.join "\n  "}"
    puts "Default: #{parser}"
    exit
  end
  opts.on_tail("-h", "--help", "Show this help screen") do
    puts opts
    exit
  end
end.parse!

if ARGV.all? { |arg| arg.match(/^\d+$/) } and not ARGV.empty?
  ARGV.each do |arg|
    Net::HTTP.get_print(URI.parse(url % "#{arg}/download"))
  end
  exit
end

text_file = `mktemp -q -t pastie`
at_exit { File.delete text_file }

File.open(text_file, 'w') { |file| file << ARGF.read }

password = Net::HTTP.get(URI.parse(url % :create)).match(pattern)[1]

url = %x{
  curl #{url % :create} \
  -s -L -o /dev/null -w "%{url_effective}" \
  -H "Expect:" \
  -F "paste[parser]=#{parser}" \
  -F "paste[restricted]=#{priv}" \
  -F "paste[wrap]=#{wrap}" \
  -F "paste[display_name]=#{author}" \
  -F "paste[body]=<#{text_file}" \
  -F "paste[authorization]=#{password}"
}

# This is what TextMate uses:
# %x{
#   curl #{PASTE_URL} \
#   -s -L -o /dev/null -w "%{url_effective}" \
#   -H "Expect:" \
#   -F "paste[parser]=plaintext" \
#   -F "paste[restricted]=#{priv}" \
#   -F "paste[wrap]=#{wrap}" \
#   -F "paste[display_name]=#{author}" \
#   -F "paste[file_extension]=#{ext}" \
#   -F "paste[body]=<#{text_file}" \
#   -F "paste[textmate_html_gz]=<#{html_file}"
# }

# `echo -n #{url} | pbcopy`
puts url
